/*
 * Copyright (C) 2018 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.strata.product.bond;

import java.io.Serializable;
import java.time.LocalDate;

import org.joda.beans.ImmutableBean;
import org.joda.beans.gen.BeanDefinition;
import org.joda.beans.gen.PropertyDefinition;
import java.lang.invoke.MethodHandles;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaBean;
import org.joda.beans.TypedMetaBean;
import org.joda.beans.impl.light.LightMetaBean;

/**
 * The settlement details of a bill trade.
 * <p>
 * When a trade in a bill occurs there is an agreed settlement process.
 * This class captures details of that process for the purpose of pricing.
 * <p>
 * Once the trade has settled, end of day processing typically aggregates the trades into positions.
 * As a position combines multiple trades at different prices, the information in this class does not apply.
 * 
 * <h4>Price</h4>
 * Strata uses <i>decimal rates</i> for bills in the trade model, pricers and market data.
 * For example, a yield of 1.32% is represented in Strata by 0.0132.
 */
@BeanDefinition(style = "light")
public final class ResolvedBillSettlement
    implements ImmutableBean, Serializable {

  /**
   * The settlement date.
   */
  @PropertyDefinition(validate = "notNull")
  private final LocalDate settlementDate;
  /**
   * The <i>yield</i> or <i>rate</i> at which the bill was traded.
   * <p>
   * Strata uses <i>decimal rates</i> for bills in the trade model, pricers and market data.
   * For example, a price of 1.32% is represented in Strata by 0.0132.
   */
  @PropertyDefinition
  private final double yield;

  //-------------------------------------------------------------------------
  /**
   * Obtains an instance from the settlement date and price.
   * 
   * @param settlementDate  the settlement date
   * @param yield  the yield at which the trade was agreed
   * @return the settlement information
   */
  public static ResolvedBillSettlement of(LocalDate settlementDate, double yield) {
    return new ResolvedBillSettlement(settlementDate, yield);
  }

  //------------------------- AUTOGENERATED START -------------------------
  /**
   * The meta-bean for {@code ResolvedBillSettlement}.
   */
  private static final TypedMetaBean<ResolvedBillSettlement> META_BEAN =
      LightMetaBean.of(
          ResolvedBillSettlement.class,
          MethodHandles.lookup(),
          new String[] {
              "settlementDate",
              "yield"},
          new Object[0]);

  /**
   * The meta-bean for {@code ResolvedBillSettlement}.
   * @return the meta-bean, not null
   */
  public static TypedMetaBean<ResolvedBillSettlement> meta() {
    return META_BEAN;
  }

  static {
    MetaBean.register(META_BEAN);
  }

  /**
   * The serialization version id.
   */
  private static final long serialVersionUID = 1L;

  private ResolvedBillSettlement(
      LocalDate settlementDate,
      double yield) {
    JodaBeanUtils.notNull(settlementDate, "settlementDate");
    this.settlementDate = settlementDate;
    this.yield = yield;
  }

  @Override
  public TypedMetaBean<ResolvedBillSettlement> metaBean() {
    return META_BEAN;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the settlement date.
   * @return the value of the property, not null
   */
  public LocalDate getSettlementDate() {
    return settlementDate;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the <i>yield</i> or <i>rate</i> at which the bill was traded.
   * <p>
   * Strata uses <i>decimal rates</i> for bills in the trade model, pricers and market data.
   * For example, a price of 1.32% is represented in Strata by 0.0132.
   * @return the value of the property
   */
  public double getYield() {
    return yield;
  }

  //-----------------------------------------------------------------------
  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      ResolvedBillSettlement other = (ResolvedBillSettlement) obj;
      return JodaBeanUtils.equal(settlementDate, other.settlementDate) &&
          JodaBeanUtils.equal(yield, other.yield);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    hash = hash * 31 + JodaBeanUtils.hashCode(settlementDate);
    hash = hash * 31 + JodaBeanUtils.hashCode(yield);
    return hash;
  }

  @Override
  public String toString() {
    StringBuilder buf = new StringBuilder(96);
    buf.append("ResolvedBillSettlement{");
    buf.append("settlementDate").append('=').append(settlementDate).append(',').append(' ');
    buf.append("yield").append('=').append(JodaBeanUtils.toString(yield));
    buf.append('}');
    return buf.toString();
  }

  //-------------------------- AUTOGENERATED END --------------------------
}
